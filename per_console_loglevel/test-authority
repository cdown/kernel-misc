#!/bin/bash -ex

set_global() { echo "$1" > /proc/sys/kernel/console_loglevel; }
set_printk() { echo "$1" > /proc/sys/kernel/printk; }
set_local() { echo "$1" > /sys/class/console/ttyS0/loglevel; }
set_sysrq() { echo "$1" > /proc/sysrq-trigger; }

check_effective() { [[ "$(cat /sys/class/console/ttyS0/effective_loglevel)" == "$1" ]]; }
check_effective_source() { [[ "$(cat /sys/class/console/ttyS0/effective_loglevel_source)" == "$1" ]]; }

# All controls are 0 or unset
reset() {
    set_printk '0 0 0 0'
    set_global 0
    set_local -1
    check_effective 0
    check_effective_source global
}

# Only default loglevel is set. Should take default.
reset

# If default gets moved, we take it
set_global 7
check_effective 7
check_effective_source global

# If we set locally, we take that
set_local 5
check_effective 5
check_effective_source local

# Cannot set outside of range
( ! set_global 10 )
( ! set_local 10 )
( ! set_global -1 )
( ! set_local -1 )
check_effective 5
check_effective_source local

# If minimum gets set, then we don't change things, but don't allow setting again
set_printk '0 0 7 0'
check_effective 5
check_effective_source local

( ! set_local 6 )
check_effective 5
check_effective_source local

# Can unset. minimum is completely ignored if 0 was already there
set_local -1
check_effective 0
check_effective_source global

# Magic sysrq should reset everything, including local
set_printk '0 0 0 0'  # no minimum
set_local 5
set_sysrq 8
check_effective 8
check_effective_source global
